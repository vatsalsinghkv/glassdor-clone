/****************************************************************
 *
 * CSS Percentage Circle
 * Author: Andre Firchow
 *
*****************************************************************/

// VARS
$circle-width: 0.1em;
$circle-width-hover: 0.05em;

// colors default
$primary-color: var(--color-primary);
$secondary-color: var(--color-grey-5);
$bg-color: #fff;

// CIRCLE
// classes 2 extend
.rect-auto {
  clip: rect(auto, auto, auto, auto);
}

.pie {
  position: absolute;
  border: $circle-width solid $primary-color;
  width: 1 - (2 * $circle-width);
  height: 1 - (2 * $circle-width);
  clip: rect(0em, 0.5em, 1em, 0em);
  border-radius: 50%;

  transform: rotate(0deg);
}

.pie-fill {
  transform: rotate(180deg);
}

// main
.c100 {
  *,
  *::before,
  *::after {
    box-sizing: content-box;
  }

  position: relative;
  font-size: 120px;
  width: 1em;
  height: 1em;
  border-radius: 50%;
  margin: 0 0.1em 0.1em 0;
  background-color: $secondary-color;

  // center circle to its parent

  // margin: 0 auto;

  font-size: 7rem;

  // centered value inside circle
  > span {
    position: absolute;
    width: 100%;
    z-index: 1;
    left: 0;
    top: 0;
    width: 5em;
    line-height: 5em;
    font-size: 0.2em;
    color: $primary-color;
    display: block;
    text-align: center;
    white-space: nowrap;
    transition-property: all;
    transition-duration: 0.2s;
    transition-timing-function: ease-out;
  }

  // background inside the circle
  &::after {
    position: absolute;
    top: $circle-width;
    left: $circle-width;
    display: block;
    content: ' ';
    border-radius: 50%;
    background-color: $bg-color;
    width: 1 - (2 * $circle-width);
    height: 1 - (2 * $circle-width);
    transition-property: all;
    transition-duration: 0.2s;
    transition-timing-function: ease-out;
  }

  // the slice (mask)
  .slice {
    position: absolute;
    width: 1em;
    height: 1em;
    clip: rect(0em, 1em, 1em, 0.5em);
  }

  // circle to show the status
  .bar {
    @extend .pie;
  }

  // loop to create all needed elements automatically
  @for $j from 51 through 100 {
    &.p#{$j} .slice {
      @extend .rect-auto;
    }

    &.p#{$j} .bar:after {
      @extend .pie-fill;
    }

    &.p#{$j} .fill {
      @extend .pie;
      @extend .pie-fill;
    }
  }

  // loop to rotate all 100 circles
  @for $j from 1 through 100 {
    &.p#{$j} .bar {
      transform: rotate((360/100 * $j) + deg);
    }
  }

  // hover styles
  &:hover {
    cursor: default;

    > span {
      width: 3.33em;
      line-height: 3.33em;
      font-size: 0.3em;
      color: $primary-color;
    }

    &::after {
      top: $circle-width-hover;
      left: $circle-width-hover;
      width: 1 - (2 * $circle-width-hover);
      height: 1 - (2 * $circle-width-hover);
    }
  }
}
